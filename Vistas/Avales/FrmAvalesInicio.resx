<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TxtBuscar.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        6QAAAOkBVJIUSwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASBSURBVFhHzZdt
        TFNXGMdxW7Ivy7JPS5ZlASeUDhxz97ZIy1sdc31BHSQ2Q6BKeykChg17C4YpynAmsrFE+KJmxvmWyWJI
        JMbFMLchY1tMHFuEjDnZnCIvU1HCoEiRPjvP6bndlb5QXjb3T/5f7j33/3uec885vY1YiKKNZU9yRuda
        3uQ4xBvFy8RDxG7iPpVR/I7ce5/LFHk2fPFkNpsf5wyOAgK6QQySE9dtg+ScGlCtqfRdozaIX6kNopo9
        vjCtyCp/hoS20mCTE0wVH0PhyYtQ9cMw7PzF5XXPOIgdfWA5+CXobB9IhUxzRvFdErHEmzQPJbzhfJY3
        iT0YuEr4EN5pveqD7v7VBQ2/34d9v038UwhxNSnGdvQbSHyzyoPPxaUXf0GiHvMmzkH4vnmjowNDsOvt
        l0coYD+Bdg4/gDsugJEJrxtmFIF2tP0Br+jLIZLbAAqt0MpiwxcuKIS/XtIAO7pHoYaEnv9zCu4x6OC4
        BzrvPqDXaq88DEc729xg3tsJUXwuRPKkiBTBwqJnF68vf46873GyyDyVF4doYPutKQoeIOCmvkla0Eyo
        ZOeFKSj9DKh1wmE6C8tWbrzL4mcXb3TWYvdv1bfQwE9vTFL4zTEPfNTrP91yY+cSHF1ycgqiNVZahDJF
        yGWI0CLwLizA+e1N2EVCr//loQUcvHY/IFSyvHO5k/MbvWtBY21niOCiK5/A0611NPQAgSK86960H1Du
        mZ3LnVP/s/QaRhkmuHh9BYcFZG47RINP97tpAS0Dbj+o5GCdSy5umoYoLheWqvOnGCa4OIOoxwKydzfR
        8HND3sV39PqkHxgdqnO5l6otZDfkAsME16smMQ0LWLfzBAXUk0V3dtAdeKu1hwdH43aM4vOmGSa4OP3W
        aCxg9ZZGP6Dc4XaOLjgwQNfAi4kWF8OE1BJSwG312krf6ecHn0Pn6IySE7SAGE1BD2OEFingCM6C9ViH
        P3wOnUuOf62MnQO2XQwRWupMhxYLSLPsocewDz7HztFZ1W3e6Sc7IF5X+hRDzC7yU9qCRayva5535/ZP
        RnynYGyybT+LDk9kN0SqMivuYBFrdpwKCAjlzcddELfKO/XLkjbditDVPMGiw9PV4eGnm8/92BWvK6Yh
        fNZ7UHTMFRA203n7eiEm2c6m3jK5PK30BRYbWiqDuJV0/H2WUJd4bXDsQnfvbdjT2DwRpcrz0E5WbgJd
        4WEoPDIaEJxT3wOq7Fp66lF44saRl3UFShYfWvj5hNNNF9/67e5TZy/Bpe7+0Z+u9D2vTLNryTk+iKFo
        BMSmFEGCvhJWmKogLuNtiE7yvmt6n8/1xGisX4e96DiDs0KCo19KLcJzG1ZvqC5kQ6iUWrs9OqmgN0qV
        Py3B5MaDBsEJOmE5e2R2yTuX4FIgOb/H2DA/KVI3ZyhSCrcoU4Wq2BTBrMywK9it8BUKjlZorWfY0MVX
        oGl/CK6xnWdDF1//azhZRPgd/++JQPsfGRxFZiCbwN2PBC4pLr2kTA6f1z+XhYrs3b34iaTQCJ+zS/+B
        IiL+BkjSaGQUc+MNAAAAAElFTkSuQmCC
</value>
  </data>
</root>